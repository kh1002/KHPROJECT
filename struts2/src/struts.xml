<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC	
	"-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
	"http://struts.apache.org/dtds/struts-2.0.dtd">
	
	
<!-- namespace는 가상의 경로를 만들어준다. xml에서 설정하면 jsp에서 찾아갈 경로도 바꿔줘야 동작한다 -->	
<struts>
	<!-- hello를 출력하는 간단예제 -->
	<package name="hello" namespace="/zzuggumi"  extends="struts-default">
		<action name="hello" class="hello.HelloWorldAction">
			<result>/result.jsp</result>
		</action>
	</package>	
	
	<!-- 5번 예제 - POJO클래스를 이용해 hello를 출력하기 -->
	<package name="hello1" namespace="/hello1" extends="struts-default">
		<action name="hello" class="hello1.action.HelloWorld">
			<result name="success">/hello1/result.jsp</result>
		</action>
	</package>
	
	<!-- 6번 예제 - action인터페이스를 이용해 hello를 출력하기 -->
	<package name="hello2" namespace="/hello2" extends="struts-default">
		<action name="hello" class="hello2.action.HelloWorld">
			<interceptor-ref name="params"/>
			<result name="success">/hello2/result.jsp</result>
			<result name="input">/hello2/hello.jsp</result> <!-- 가로챈 값이 아무것도 없으면 다시 hello.jsp를 실행 -->
		</action>
	</package>
	
	<!-- 7번 예제 - actionSupport 클래스를 이용해 hello를 출력하기 -->
	<package name="hello3" namespace="/hello3" extends="struts-default">
		<action name="hello" class="hello3.action.HelloWorld">
			<!-- params 인터셉터는 액션의 setter값을 요청 파라미터로 세팅 -->
			<interceptor-ref name="params"/>
			<!-- workflow 인터셉터는 액션에서 validate()를 먼저 호출함. 그래서 유효성 검증을 하는 역할-->
			<interceptor-ref name="workflow"/>
			
			<result name="input">/hello3/hello.jsp</result>
			<result name="success">/hello3/result.jsp</result>
		</action>	
	</package>
	
	<!-- 8번 예제 - 스트러츠로 MVC패턴으로 표현하기 -->
	<package name="struts2" extends="struts-default">
		<action name="user" class="login.action.UserAction">
			<result>/form1/save_ok.jsp</result>
			<result name="error">/form1/error.jsp</result>
		</action>
		<action name="user2" class="login.action.UserAction2">
			<result>/form1/save_ok2.jsp</result>
			<result name="error">/form1/error.jsp</result>
		</action>
		<!-- user3액션에 대한 자세한 설명은 form1/form3.jsp에 있음 -->
		<action name="user3" class="login.action.UserAction3">
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="params"/>
			<result>/form1/save_ok2.jsp</result>
			<result name="error">/form1/error.jsp</result>
		</action>	
	</package>
	
	<!-- 9번 예제 - 액션수행시간 체크하는 타이머 -->
	<package name="struts2_1" extends="struts-default">
		<interceptors>
			<interceptor name="mytimer" class="interceptor.Timer"/>
		</interceptors>
		
		<action name="add" class="interceptor1.action.SumAction">
			<param name="num1">5</param> <!-- 18번 staticParams예제를 위해 추가된 코드 -->
			<param name="num2">8</param> <!-- 18번 staticParams예제를 위해 추가된 코드 -->
			<interceptor-ref name="mytimer"/>
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="staticParams"/> <!-- 18번 staticParams예제를 위해 추가된 코드 -->
			<interceptor-ref name="params"/>
			
			<result>/interceptor/result.jsp</result>
		</action>
	</package>
	
	<!-- 10번 예제 - 로그인 -->
	<package name="struts2_2" extends="struts-default">
		<action name="login" class="login2.action.LoginAction">
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="params"/>
			<result>/login/login_ok.jsp</result>
			<result name="login">/login/login.jsp</result>
		</action>
	</package>
	
	<!-- 11번 예제 - 로그인 (DI)-->
	<package name="struts2_3" extends="struts-default">
		<interceptors>
			<interceptor name="loginDao" class="login3.interceptor.LoginDAOInterceptor"/>
		</interceptors>
	
		<action name="login" class="login3.action.LoginAction">
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="params"/>
			<interceptor-ref name="loginDao"/>
			<result>/login2/login_ok.jsp</result>
			<result name="login">/login2/login.jsp</result>
		</action>
	</package>
	
	<!-- 16번 예제 - 파일업로드 -->
	<constant name="struts.multipart.saveDir" value="/tmp"/>
	<package name="struts2_4" extends="struts-default">
		<interceptors>
			<interceptor name="fileUploadDao" class="upload.interceptor.FileUploadDAOInterceptor"/>
		</interceptors>
		
		<action name="fileupload" class="upload.action.FileUploadAction">
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="fileUpload"/>
			<interceptor-ref name="params"/>
			<interceptor-ref name="fileUploadDao"/>
			
			<result>/upload/upload_ok.jsp</result>
		</action>

	</package>
	
	
	<!-- 18번 예제 - staticParams인데 Map을 활용해 값을 수동으로 세팅해서 두 수의 합을 수행함  -->
	<package name="struts2_1_1" extends="struts-default">
		<action name="add" class="staticParams.action.SumAction">
			<param name="num1">145</param> 
			<param name="num2">28</param> 
			
			<result>/staticParams/result.jsp</result>
		</action>
	</package>
	
	<!-- 19번 예제 - checkBox의 체크 안한부분도 값을 넘겨주는 예제 -->
	<package name="struts2_5" extends="struts-default">
	
		<action name="checkbox" class="checkbox.action.CheckBoxAction">
			<!-- 체크하지 않은 항목도 값을 전송해준다 / 여기서는 false를 전송 -->
			<interceptor-ref name="checkbox">
				<param name="uncheckedValue">false</param>
			</interceptor-ref>
			
			<result>/checkbox/result.jsp</result>
		</action>
		
		<action name="checkboxExam1">
			<result>/checkbox/checkbox.jsp</result>
		</action>
	</package>
	
	<package name="struts2_6" extends="struts-default">
		<action name="checkbox" class="checkbox.action.CheckBoxAction">
			<interceptor-ref name="checkbox">
				<param name="uncheckedValue">false</param>
			</interceptor-ref>
			<interceptor-ref name="checkbox"/>
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="params"/>
		
			<result>/checkbox/result.jsp</result>
		</action>
	</package>
	
	
	
	<!-- 21번 예제 - servlet을 이용해 세션에 정보를 저장하여 로그인을 하는 예제 -->
	<package name="struts2_21" extends="struts-default">
		<interceptors>
			<interceptor name="loginDao" class="servletConfig.interceptor.LoginDAOInterceptor"/>
		</interceptors>
	
		<action name="login" class="servletConfig.action.LoginAction">
			<interceptor-ref name="prepare"/>
			<interceptor-ref name="modelDriven"/>
			<interceptor-ref name="params"/>
			<interceptor-ref name="loginDao"/>
			<interceptor-ref name="servletConfig"/>
			
			<result>/servletConfig/login_ok.jsp</result>
			<result name="login">/servletConfig/login.jsp</result>
		</action>
	</package>
	
	<!-- 21번 예제 - redirect하는 result/ 로그인을 하는 예제 -->
	<package name="struts2_24" extends="struts-default">
		<action name="login" class="login4.action.LoginAction">
			<interceptor-ref name="params"/>
			<result name="success" type="redirect">/login/login_ok.jsp?id=${id}</result>
			<result name="login">/login/login.jsp</result>	
		</action>
	</package>
	
	
	
	
</struts>	

